package by.itstep.javatraining.revision.task;

/*	Task 01. Time-Turner - a magical device used for time travel [маховик времени]
 *
 *	Маховик времени - это волшебный предмет для путешествия по времени.
 *  Гермиона Грейнджер в фильме "Гарри Поттер и узник Азкабана" очень хотела успевать на несколько
 *  разных занятий, которые идут в одно и то же время. Для этого она использовала маховик времени
 *  и перемещалась между двумя моменатми времени.
 *  Определите, сколько дополнительных секунд могла потратить Гермиона на учёбу за одно перемещение,
 *  т.е. сколько секунд прошло между двумя моментами времени.
 *
 *	Примечание
 *	1) Не забудьте про "защиту от дурака": если данные момента времени некорректны,
 *  то нужно возвратить -1.
 *	2) Моменты времени могут задаваться по-разному (используйте активную "защиту от дурака").
 *  3) Данную задачу можно решить, используя только встроенные операции языка.
 *
 *	Формат входных данных [input]
 *	На вход метод получает три целых числа в диапазоне типа int: часы, минуты, секунды,
 *	задающие один момент времени и три целых числа, задающих ещё один момент времени.
 *
 *	Формат выходных данных [output]
 *	Метод должен возвратить число секунд между моментами времени или -1,
 *  если данные введены некорректно.
 *
 *	[ input 1]: 1 1 1 2 2 2
 *	[output 1]: 3661
 *
 *	[ input 2]: 2 2 2 1 1 1
 *	[output 2]: 3661
 *
 *	[ input 3]: 1 2 30 1 3 20
 *	[output 3]: 50
 *
 *	[ input 4]: 0 0 0 0 0 0
 *	[output 4]: 0
 *
 *	[ input 5]: 1 2 -30 1 3 20
 *	[output 5]: -1
 */

public class Task01 {
    public static int start(int hour1, int minute1, int second1, int hour2, int minute2, int second2) {
        if (hour1 < 0 || hour1 > 23 || minute1 < 0 || minute1 > 59 || second1 < 0 || second1 > 59
                || hour2 < 0 || hour2 > 23 || minute2 < 0 || minute2 > 59 || second2 < 0 || second2 > 59) {
            return -1;
        }

        int totalSec1 = (hour1 * 60 * 60) + (minute1 * 60) + second1;
        int totalSec2 = (hour2 * 60 * 60) + (minute2 * 60) + second2;

        int minSec = Math.min(totalSec1, totalSec2);
        int maxSec = Math.max(totalSec1, totalSec2);

        return maxSec - minSec;
    }
}